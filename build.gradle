plugins {
    id 'org.springframework.boot' version '3.0.0-SNAPSHOT'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'java'
    id 'com.github.davidmc24.gradle.plugin.avro' version '1.3.0'
}

group = 'br.com.confluent'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
    maven { url 'https://packages.confluent.io/maven'}
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.apache.kafka:kafka-streams:3.3.1'
    implementation 'org.apache.avro:trevni-avro:1.11.0'
    implementation 'io.confluent:kafka-streams-avro-serde:7.2.0'
    implementation 'io.confluent:kafka-schema-registry-client:7.2.0'
    implementation 'org.springframework.kafka:spring-kafka:2.9.0'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.named("test"){
    useJUnitPlatform()
}

avro {
    createSetters = true
    createOptionalGetters = true
    gettersReturnOptional = false
    optionalGettersForNullableFieldsOnly = true
    fieldVisibility = "PRIVATE"
    outputCharacterEncoding = "UTF-8"
    stringType = "String"
    templateDirectory = null
    enableDecimalLogicalType = true
}

tasks.generateAvroJava {
    source("src/main/avro")
}

tasks.generateAvroProtocol{
    source("src/main/avro")
}